#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define MAX 1000

// List of C keywords
const char *keywords[] = {"int", "float", "if", "else", "return", "for", "while", "char", "void"};
int is_keyword(const char *word) {
    for (int i = 0; i < sizeof(keywords)/sizeof(keywords[0]); i++)
        if (strcmp(word, keywords[i]) == 0) return 1;
    return 0;
}

// List of standard library functions
const char *std_lib_funcs[] = {"printf", "scanf", "strlen", "strcpy", "malloc", "free", "gets", "puts"};
int is_std_lib_func(const char *word) {
    for (int i = 0; i < sizeof(std_lib_funcs)/sizeof(std_lib_funcs[0]); i++)
        if (strcmp(word, std_lib_funcs[i]) == 0) return 1;
    return 0;
}

int is_delim(char ch) {
    return strchr("(){}[],;:", ch) != NULL;
}

int is_op(char ch) {
    return strchr("+-*/=%<>!", ch) != NULL;
}

void tokenize(const char *code) {
    char word[100];
    int i = 0, j;

    while (code[i]) {
        if (isspace(code[i])) { i++; continue; }

        if (isalpha(code[i]) || code[i] == '_') {
            j = 0;
            while (isalnum(code[i]) || code[i] == '_') word[j++] = code[i++];
            word[j] = '\0';
            if (is_keyword(word))
                printf("%-20s : KEYWORD\n", word);
            else if (is_std_lib_func(word))
                printf("%-20s : STD_LIB_FUNC\n", word);
            else
                printf("%-20s : IDENTIFIER\n", word);
        }
        else if (isdigit(code[i])) {
            j = 0;
            while (isdigit(code[i]) || code[i] == '.') word[j++] = code[i++];
            word[j] = '\0';
            printf("%-20s : NUMERIC_LITERAL\n", word);
        }
        else if (code[i] == '"' || code[i] == '\'') {
            char quote = code[i++];
            j = 0; word[j++] = quote;
            while (code[i] != quote && code[i]) word[j++] = code[i++];
            if (code[i] == quote) word[j++] = code[i++];
            word[j] = '\0';
            printf("%-20s : STRING_LITERAL\n", word);
        }
        else if (is_op(code[i])) {
            printf("%-20c : OPERATOR\n", code[i++]);
        }
        else if (is_delim(code[i])) {
            printf("%-20c : DELIMITER\n", code[i++]);
        }
        else {
            printf("%-20c : UNKNOWN\n", code[i++]);
        }
    }
}

int main() {
    char code[MAX], line[256];

    printf("Enter C code (Press Ctrl+Z or Ctrl+D to end input):\n");
    code[0] = '\0'; // Initialize code as empty

    while (fgets(line, sizeof(line), stdin)) {
        strcat(code, line);
    }

    printf("\n--- Token Output ---\n");
    tokenize(code);
    return 0;
}


input:
int main() {
int sum, x=5, y=10;
sum = x+y;
printf("The sum is: %d\n", sum);
return 0;
}