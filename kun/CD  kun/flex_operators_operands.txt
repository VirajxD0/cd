Identify operators and operands in a code
%{
#include <stdio.h>

int operand_count = 0, operator_count = 0;
%}

%%

[0-9]+(\.[0-9]+)?     { printf("Operand: %s (NUMBER)\n", yytext); operand_count++; }
[a-zA-Z_][a-zA-Z0-9_]* { printf("Operand: %s (IDENTIFIER)\n", yytext); operand_count++; }

[+\-*/%=]             { printf("Operator: %s (ARITHMETIC)\n", yytext); operator_count++; }
(==|!=|<=|>=|<|>)     { printf("Operator: %s (RELATIONAL)\n", yytext); operator_count++; }
(&&|\|\|)             { printf("Operator: %s (LOGICAL)\n", yytext); operator_count++; }

[\t ]+                { /* Ignore spaces and tabs */ }
\n                    { /* Ignore newlines */ }

%%

int main() {
    printf("Enter code snippet (Press Ctrl+D to end):\n");
    yylex();

    printf("\nTotal Operands: %d\n", operand_count);
    printf("Total Operators: %d\n", operator_count);

    return 0;
}

int yywrap() {
    return 1;
}